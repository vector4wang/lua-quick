---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- DateTime: 2023-11-21 16:37
---

local core = require("apisix.core")
local clear_tab = require "table.clear"
local table = table
local insert_tab = table.insert
local new_header_value = {}

local plugin_name = "merge-header"

local schema = {
    type = "object",
    properties = {
        new_header_name = { type = "string", default = "X-Kong-Merge-Header" },
        original_header_names = {
            type = "array",
            minItems = 1,
            items = { type = "string" },
        },
    },
}

local _M = {
    version = 0.1,
    priority = 970,
    name = plugin_name,
    schema = schema,
    run_policy = "prefer_route",
}

function _M.check_schema(conf)
    local ok, err = core.schema.check(schema, conf)
    if not ok then
        return false, err
    end

    return true
end

function _M.access(conf, ctx)
    clear_tab(new_header_value)
    local headers = core.request.headers(ctx)
    for _, header_name in ipairs(conf.original_header_names) do
        local header_value = headers[header_name] or 'nil'
        insert_tab(new_header_value, header_value)
    end
    core.request.set_header(ctx, conf.new_header_name, table.concat(new_header_value, '-'))
end

return _M
